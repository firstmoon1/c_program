 include <stdio.h>

 int main(){
 
 printf("Hello Word.\n");
 return 0;

}




#include <stdio.h>

int main(){
    
    int a, b ,  result;
    
    scanf(" %d  %d ", &a,&b);
   
   result=a+b;
   
   printf("%d ",result );
   
    return 0;
}



#include <stdio.h>

int main() {
    
    int a;
    scanf("%d",&a);
    if(a%2==0){
        printf("%d is an even number.",a);
    }
    else{
        printf("%d is a odd number.",a);

    } 
    return 0;
    
}


#include <stdio.h>

int main(){

    int a;
scanf("%d", &a);
if(a==0){
    printf("F\n");
}else if(a==1){
    printf("DD\n");
}else if(a==2){
    printf("CC\n");
}else if(a==3){
    printf("BB\n");
}else{
    printf("AA\n");
}
    return 0;
}



#include <stdio.h>
int main(){
char o;

float R;
float pi=3.14;//p sayısı

scanf("%c",&o);
scanf("%f",&R);
if(o=='a'){

    printf("Area of circle = %f\n",pi*R*R);
}else if(o=='p'){

    printf("Perimeter of circle = %f\n",(2)*pi*R);
}else{

    printf("volume of a sphere = %f\n",(4/3)*pi*R*R*R);
}
    return 0;
}


#include <stdio.h>
int main(){
int a,b;
scanf("%d %d", &a,&b);

printf("%d\n", a+b);

printf("%d\n", a*b);

printf("%d\n", a/b);

printf("%d\n", a%b);

return 0;
}


#include <stdio.h>
int main(){
char b;
scanf("%c", &b);

if(b>96 && b<123){
    printf("%c", b-32);
}
    return 0;
}


#include <stdio.h>
int main(){
    int a;
    
    scanf("%d",&a);
    if(a%7==0){
        printf("%d",a*a);
    }else{
        printf("not multiple of 7");
    }
    
    
    return 0;
}



#include <stdio.h>

int main(){
    
    int a;
    
    scanf("%d", &a);
    
    printf("%c\n", a+96);
    
    return 0;
}



#include <stdio.h>

int main(){
    int a, b, c;
    
    scanf("%d %d %d", &a, &b, &c);
    
    if(a>b && a>c){
        printf("%d\n",a);
    }else if(b>a && b>c){
        printf("%d\n", b);
    }
    /*
    else if(c>a && c>b ){
        printf("%d\n",c);
    }
    */
    else{
        printf("%d", c);  
    }
    
    return 0;
}



#include <stdio.h>
int main(){
int a,b;
scanf("%d%d",a,b);
(a<0 && b>0) ? printf("1\n") : (b<0 && a>0) ? printf("1\n") : printf("0\n");
return 0;
}


#include <stdio.h>
int main(){
int a,b;
scanf("%d %d",&a,&b);
printf((a*b)>0 ? "0" :"1");
return 0;
}



#include <stdio.h>

int main()
{
 char ch;
 int num1;
printf("number\n");
 scanf("%c",&ch);

if((ch>='0') && (ch<='9')){
num1 =ch-'0';

    printf("sayi :%d\n",num1);
    printf("sayi :%d\n",ch);
    printf("sayi :%d\n\n",2*num1);
}else{
printf("error");
}
    return 0;
}



#include <stdio.h>

#define PI 3.14

int main(){
    
    char ch;
    int a;
    
    scanf("%c %d", &ch, &a);
    
    switch(ch){
        case 'a':
        printf("Area of circle = %f\n", PI*a*a);
        break;
        case 'p':
        printf("Perimeter of circle = %f\n", 2*PI*a);
        break;
        case 'v':
        printf("The volume of a sphere = %f\n", 4/3*PI*a*a*a);
        break;
    }
    
    return 0;
}


#include <stdio.h>

#define PI 3.14

int main(){
    
    char ch;
    int p;
    
    scanf("%c %d", &ch, &p);
    
    switch(ch){
        case 'a':
        printf("Area of circle = %f\n", PI*p*p);
        break;
        case 'p':
        printf("Perimeter of circle = %f\n", 2*PI*p);
        break;
        default:
        printf("The volume of a sphere = %f\n", 4/3*PI*p*p*p);
        break;
    }
    
    return 0;
}


#include <stdio.h>

enum grades { F , DD, CC, BB, AA };

int main(){
    enum grades g;
    scanf("%u", &g);
    switch(g){       
        case F:
        printf("F\n");
        break;
        case DD:
        printf("DD\n");
        break;
        case CC:
        printf("CC\n");
        break;
        case BB:
        printf("BB\n");
        break;
        case AA:
        printf("AA\n");
        break;
    }  
    return 0;
}



#include <stdio.h>

int main(){
    
    char ch;
    float a, b;

    scanf("%c %f %f", &ch, &a, &b);
    
    switch(ch){
        case '+':
        printf("%.1f + %.1f = %.1f\n",a, b, a+b);
        break;
        case '*':
        printf("%.1f * %.1f = %.1f\n",a, b, a*b);
        break;
        case '-':
        printf("%.1f - %.1f = %.1f\n",a, b, a-b);
        break;
        case '/':
        printf("%.1f / %.1f = %.1f\n",a, b, a/b);
        break;
    } 
    return 0;
}



#include <stdio.h>
int main()
{
    char ch;
scanf("%c",&ch);
switch (ch)
{
 case 'M' : printf ("Male\n");
 break;
 case 'm' :printf ("Male\n" );
 break;
 case 'F' :printf ("Female\n" );
 break;
 case 'f' :printf ("Female\n");
 break;
 default : printf("ERROR");
}
        return 0;
}





#include <stdio.h>
int main(){
    char ch;
    scanf("%c", &ch);
    
    if( (ch>=64 && ch<=91) || ( ch>=96 && ch<=123)){
        switch(ch){
            case 'a' :
            printf("%c is a VOWEL.\n",ch);
            break;
            case 'A' :
            printf("%c is a VOWEL.\n",ch);
            break;
            case 'e' :
            printf("%c is a VOWEL.\n",ch);
            break;
             case 'E' :
            printf("%c is a VOWEL.\n",ch);
            break;
            case 'I':
            printf("%c is a VOWEL.\n",ch);
            break;
            case 'i':
            printf("%c is a VOWEL.\n",ch);
            break;
            case 'U' :
            printf("%c is a VOWEL.\n",ch);
            break;
            case 'u':
            printf("%c is a VOWEL.\n",ch);
            break;
            case 'O' :
            printf("%c is a VOWEL.\n",ch);
            break;
            case 'o':
            printf("%c is a VOWEL.\n",ch);
            break;
      
            
default:
            printf("%c is a CONSONANT.\n",ch);
        }
        
    }else{
        printf("%c is not a LETTER.\n", ch);
    }
    
    return 0;
}


#include <stdio.h>

int main(){
    
    char ch;
    float a, b;

    scanf("%c %f %f", &ch, &a, &b);
    
    switch(ch){
        case '+':
        printf("%.1f + %.1f = %.1f\n",a, b, a+b);
        break;
        case '*':
        printf("%.1f * %.1f = %.1f\n",a, b, a*b);
        break;
        case '-':
        printf("%.1f - %.1f = %.1f\n",a, b, a-b);
        break;
        case '/':
        printf("%.1f / %.1f = %.1f\n",a, b, a/b);
        break;
    }

    
    return 0;
}


#include <stdio.h>

int main(){
    
    int a, b, i, sum=0;
    
    scanf("%d %d", &a, &b);
    
    for(i=a;i<=b;i++){// i=a
     if(i%2==1){ //i=a+1
        sum+=i;//sum=sum+i;
     }
    }
    printf("Sum of odd numbers = %d\n", sum);
   
   return 0; 
}




#include <stdio.h>
int main(){
    int a,b,c,square=1;
    scanf("%d %d",&a, &b);
    for(c=1;c<=b;c++){
        square=a*square; 
    }
    printf("%d",square);
    return 0;
}



#include <stdio.h>
int main(){
   int a,g,result=1;
   scanf("%d",&a);
   for(g=a;g>0;g--){
    if(g==0){
        break;
   }
       result=result*g;
   }
   printf("%d",result);
 return 0;
}




#include <stdio.h>
int main(){
     int a, result=0, i, temp1=0, temp2=1;
     
     scanf("%d", &a);
     printf("First %d terms of Fibonacci series are :\n", a);
     for(i=0; i<a ; i++){
         if(i==0){
             printf("%d\n", temp1);
         }
         else{
             result=temp2+temp1;
             printf("%d\n", result);
         }
         temp1=temp2;
         temp2=result;
     }
    return 0;
}



#include <stdio.h>
int main(){ 
 int sayi,result=0;
 scanf("%d",&sayi);
 while(sayi){
     result=result*10+sayi%10;
     sayi=sayi/10;     
 }
    printf("Reversed Number = %d",result);   
    return 0;
}


#include <stdio.h>
int main(){
int a,b,i;
scanf("%d",&a);
for(b=a;b>0;b--){
    for(i=0;i<b;i++){
    printf("%d ",b);
    }
    printf("\n");
}
    return 0;
} 

 kare yıldız
#include <stdio.h>
int main(){

int a,b,i,j;
scanf("%d%d",&a,&b);
for(i=a;i>0;i--){
for(j=b;j>0;j--){
printf("*");
}
printf("\n");
}
 return 0;
}

kenarlar 1 ortalar 0 ,kare şeklinde
#include <stdio.h>
int main(){
    int a,b,c,d;
    scanf("%d%d",&a,&b);
    for(c=0;c<a;c++){
        for(d=0;d<b;d++){
          if(c==0 || d==0 || c==a-1 || d==b-1 )  
             printf("1");
             else printf("0");
        }
        printf("\n");
    }
    
    
    return 0;
}


triangle olayı

#include <stdio.h>
int main(){
 int line,column,a,b,bosluk;
 scanf("%d",&line);
 bosluk=line;
 for(a=1;a<=line;a++){// kaç line var
 for(b=0;b<bosluk-a;b++)// boşluk vericez
 printf(" ");
 for(b=0;b<a*2-1;b++)
 printf("*");
 printf("\n");
 }
 return 0;
}



#include <stdio.h>
double square( double num )
{
    double n=1;
    int i=2;
    while(i--){
        n*=num;
    }   
    return n;
}
int main()
{
    double n, num;    
    scanf("%lf", &num);   
    n = square(num);   
    printf("The square of %.3lf is : %.2f\n", num, n);
    return 0;
}

yada bu alttaki aynı kod.

#include <stdio.h>
double square( double num )
{
    double n;
    n=num*num; 
    return n;
}
int main()
{
    // 10.0, pi=3.14
    double n, num;  
    scanf("%lf", &num);   
    n = square(num);    
    printf("The square of %.3lf is : %.2f\n", num, n);
    return 0;
}




#include <stdio.h>
 
 /*
//if the least significant bit is 1 the number is odd and 0 the number is even 
.... checkOddEven(...........)
{   
    .............//The & operator does a bitwise and,
}
*/
int main()
{
    int a, result;  
    scanf("%d", &a);  
                           // & -> And bitwise, &&->logical And Operator 
    result= (a & 1);       // a=8 , a->1000 & 0001 =   0000 -> it is even, it is odd 
                          /// a=9 , a->1001 & 0001 =    0001 true if fucntion
                          // If checkOddEven() function returns 1 then the number is odd 
    if(result)
    {
        printf("odd\n");   
    }
    else
    {
        printf("even\n");
    }
    return 0;
}


/*
5
The sum of the series for 5 is : 34
*/
#include <stdio.h>
int fact(int);
int main()
{
    int i, j, sum=1, n, result=0;
    
    scanf("%d", &n);// n=5
    
    for(i=1; i<=n; i++){ //
        for(j=1;j<=i;j++){  // factorial calculation
            sum*=j;
        }
        result+=sum/i; // finding  divide by factorial 
        sum=1;
    }    
    printf("The sum of the series for %d is : %d\n",n,result);
    return 0;
}


/*
47
101111
*/
#include<stdio.h>
long toBin(int);
int main()
{
    int fact=1;
    long bno=0;// binary
    int dno;
    scanf("%d",&dno);// decimal
    
    while(dno){      // fact = 1 , bno = 1 // fact = 10 , bno=11
        bno=bno + (dno%2)*fact; // 
        fact*=10;
        dno/=2;
    }
    
    //bno = toBin(dno);
    printf("%ld",bno);

    return 0;
}




#include<stdio.h>
int PrimeOrNot(int);
int main()
{
    int n1,prime, i; //119 i<59
    
    scanf("%d", &n1);
    
    for(i=2;i<=n1/2;i++){
        if(n1%i==0){
            prime=0;
            break;
        }
        else{
            prime=1;
        }
    }
    
   if(prime==1)
        printf("The number %d is a prime number.\n",n1);
   else
      printf("The number %d is not a prime number.\n",n1);
   return 0;
}




122+--*2eafdasfas ve 1 adet space yani boşluk koydun 
şimdi sana sadece 1222 göstericek while(1) sonsuz loop
break ile loop bitiyor, ch!=' ' kısmı ise boşluk 
yapmadıgında true ,yaptıgında false dur. 

#include <stdio.h>
int main(){
int number=0;
char ch;
while(1)
{
//    scanf("%d",);
  do{
    ch=getchar();
    printf("%c\n",ch);
    }
    while ((ch!=' ') && ((ch<'0') || ('9'<ch)));
      if(ch==' ')
       break;
      number=(number*10)+(ch-'0');
}
printf("%d",number);
return 0;
}




olay şu 2 kez rakam giricen  1 inci girdigin kaç kez
2inci rakam girecegine karar veriyor,2 inci girdigin ise
kaçlı triangle yaptıgı söylüyor
#include <stdio.h>
void a()
{
    int line,i,j;
    scanf("%d",&line);
    for(i=1;i<=line;i++){
        for(j=0;j<line-i;j++){
            printf(" ");}
            for(j=0;j<i*2-1;j++)
                printf("*");
             printf("\n");
}
}
int main(){
int i,n;
scanf("%d",&n);
for(i=0;i<n;i++)
    a();

return 0;
}




functions question 1
#include <stdio.h>
double square( double num )
{
    double n;
    n=num*num;  
    return n;
}
int main()
{
    double n, num;    
    scanf("%lf", &num);    
    n = square( num );     
    printf("The square of %.3lf is : %.2f\n", num, n);
    return 0;
}


fuction 3 problem
#include <stdio.h>

int fact(int);

int main()
{
    int i, n, result=0;  
    scanf("%d", &n);// n=5   
    for(i=1; i<=n; i++){ //
        result+=fact(i)/i; // finding  divide by factorial 
    }
    printf("The sum of the series for %d is : %d\n",n,result);
    return 0;
}
int fact(int i)
{
    int j, sum=1;
     for(j=1;j<=i;j++){  // factorial calculation
            sum*=j;
        }      
        return sum;
}



FUCTİON 4.QUESTİON
//decimal number to binary number
#include <stdio.h>
int gel(int sayi);
int main(){
 int num;
 scanf("%d",&num);      // 47 23  11    5       2      1       0
 printf("%d",gel(num));
    return 0;
}
int gel(int sayi){
    int c=1,b=0;
    while(sayi){        //  1  11  111   1111   1111   101111    finito
  b=b+(sayi%2)*c;
  c*=10;                //   1  10  100   1000   10000  100000 1.000.000
  sayi/=2; 
 }
 return b;
}




functions 5.question.
#include <stdio.h>
 
int checkArmstrong(int n1);
int checkPerfect(int n1);
 
int main()
{
    int n1;
    scanf("%d", &n1);
     
     
    //Calls the isArmstrong() function
    if(checkArmstrong(n1))
    {
        printf("The %d is an Armstrong number.\n", n1);
    }
    else
    {
        printf("The %d is not an Armstrong number.\n", n1);
    }
     
    //Calls the checkPerfect() function
    if(checkPerfect(n1))
    {
        printf("The %d is a Perfect number.\n\n", n1);
    }
    else
    {
        printf("The %d is not a Perfect number.\n\n", n1);
    }
    return 0;
}

// Checks whether a three digits number is Armstrong number or not. 
//An Armstrong number is an n-digit number that is equal 
//to the sum of the n-th powers of its digits.
int checkArmstrong(int n1) 
{
    int a;
    int n=n1;
    int result=0;
    
    while(n1){
        a=n1%10;//3, 5
        result+=a*a*a;// 3*3*3+5*5*5
        n1/=10;
    }
    // n1=0;
    if(n==result)
    return 1;
    return 0;
}


// Checks whether the number is perfect number or not. 
//a perfect number is a positive integer that is equal to 
//the sum of its positive divisors excluding the number itself 
int checkPerfect(int n1) 
{
    int result=0;
    int i;
    for(i=1;i<n1;i++){
        if(n1%i==0){
            result+=i;
        }
    }
    if(n1==result)
    return 1;
    return 0;
}



#include <stdio.h>
int checkArmstrong(int n1);
int checkPerfect(int n1);
int main()
{
    int n1;
    scanf("%d", &n1);   
    //Calls the isArmstrong() function
    if(checkArmstrong(n1))
    {
        printf("The %d is an Armstrong number.\n", n1);
    }
    else
    {
        printf("The %d is not an Armstrong number.\n", n1);
    }     
    //Calls the checkPerfect() function
    if(checkPerfect(n1))
    {
        printf("The %d is a Perfect number.\n\n", n1);
    }
    else
    {
        printf("The %d is not a Perfect number.\n\n", n1);
    }
    return 0;
}
// Checks whether a three digits number is Armstrong number or not. 
//An Armstrong number is an n-digit number that is equal 
//to the sum of the n-th powers of its digits.
int checkArmstrong(int n1) 
{
    int a=n1,b,result=0;
    while(n1){
    b=(n1%10);
    result+=b*b*b;
    n1/=10;
    }
    if(a==result)
   { return 1;}
    return 0;
}
// Checks whether the number is perfect number or not. 
//a perfect number is a positive integer that is equal to 
//the sum of its positive divisors excluding the number itself 
int checkPerfect(int n1) 
{
    int a,b=0;
    for(a=1;a<n1;a++){
    if(n1%a==0){
    b+=a;
    }}
    if(n1==b)
    {return 1;}
    return 0;
}





lab 8=
1 soru
#include <stdio.h>

int a,b;

int main(){
    
    scanf("%d %d", &a, &b);
    printf("%d\n",a+b);
    
    return 0;
}


2 soru
#include <stdio.h>

void func(void){
    printf("Welcome to my function. Feel at home.\n");
}
int main(){
    printf("Main function.\n");
    func();
    return 0;
}
 yada 
#include <stdio.h>

#define func() { \
    printf("Welcome to my function. Feel at home.\n"); \
}
int main(){
    printf("Main function.\n");
    func();
    return 0;
}




3 soru
#include <stdio.h>
int func(){
    return 50;
}
int main(){
    printf("%d\n",func());
}




4.soru
#include <stdio.h>
int func(int a){
    return a*a;
}
int main (){
    int a;
    scanf("%d", &a);   
    printf("%d", func( a ) );   
    return 0;
}


5.soru
#include <stdio.h>
#define func(a,b) ( (a>b) ? a : b )
/*
int func(int a, int b){
    return (a>b) ? a : b;
}
*/
int main(){  
    int a, b;   
    scanf("%d %d", &a, &b);    
    printf("%d", func(a,b) );    
    return 0;
}

6.soru 
#include <stdio.h>

int func(int x, int y){
    int result=1;
    //while( y )
    for( ; y; y--){// y=0 it will stop this algortihm 
        result*=x;
        if(y==0)
        continue;
    }
    return result;
}
int main(){
    int a, b;
    scanf("%d %d", &a, &b);
    printf("%d",func(a,b));

    return 0;
}


7.question
#include <stdio.h>
#define func(a) ( (a) *(a) *(a) ) 
int main(){  
    int a;
    scanf("%d", &a);    
    printf("%d", func(a) );    
    return 0;
}






8.question
#include <stdio.h>
int func(int a, int b){    
    int i, MGDN, min=0;
    min = a>b ? a : b ;
    for(i=1;i<min;i++){// 30, 60
        if(a%i==0 && b%i==0)
        MGDN=i;
    }
    return MGDN;
}
int main(){
    int a, b;
    scanf("%d %d", &a, &b);
    
    printf("%d", func(a,b) ); 
    
    return 0;
}

lab 8 9.soru
8 ve 10 girdin   sonuc 40 verdi
en kücük  ortak kat 
#include <stdio.h>
int func(int a, int b){   
    int max;
    max = a>b ? a: b;
    while(max){
        if( (max%a==0) && (max%b==0) ){
            break;
        }
        max++;
    }   
    return max;
}
int main(){    
    int a,b;
    scanf("%d %d",&a, &b);    
    printf("%d", func(a,b) );    
    return 0;
}





9.soru
#include <stdio.h>
int func(int a, int b){  
    int i, MGDN, min=0;
    min = a>b ? a : b;
    for(i=min; ;i++){// 30, 60
        if(i%a==0 && i%a==0){
        MGDN=i;
break;
}
    }
    return MGDN;
}
int main(){
    int a, b;
    scanf("%d %d", &a, &b);   
    printf("%d", func(a,b) );    
    return 0;
}


9 lab.
1 soru
#include <stdio.h>
int array[5] = { 19 , 10, 8, 17, 9 };
//int arr[2]= { 18 ,20 };
//int arr[] = { 18, 20 };
int main(){
    
    int i;   
    for(i=0;i<5;i++){
        printf("%d\n", array[i]);
    }  
    return 0;
}


2.soru
#include <stdio.h>

int main(){
    int arr[5];
    int i;
    
    for(i=0;i<5;i++){
        scanf("%d", &arr[i]);
        printf("%d ",arr[i]);
    }
return 0;
}

3.soru
#include <stdio.h>
int main(){
    int i;
    int arr[5];
    int max;
    for(i=0;i<5;i++){
        scanf("%d",&arr[i]);
    }    
    for(i=0;i<4;i++){
        if(arr[i]>arr[i+1]){
            max=arr[i];
        }
        else{
            max=arr[i+1];
        }
    }   
    printf("%d",max);    
    return 0;
}

aynı soru 3 ama genel olarak
ardışık olarak büyüklük bulmuyor ,genel olarak buluyor
soru yani farklı şekilde
#include <stdio.h>
int main(){
    int i;
    int arr[5];
    for(i=0;i<5;i++){
        scanf("%d",&arr[i]);
    }    
    for(i=0;i<4;i++){
        if(arr[i]>arr[i+1]){
            arr[i+1]=arr[i];
        }
    }    
    printf("%d",arr[4]);   
    return 0;
}

4.soru
#include <stdio.h>
int main(){
    int n, i;
    float sum=0, average=0.0;   
    scanf("%d",&n);
    float arr[n];
    for(i=0;i<n;i++){
        scanf("%f", &arr[i]);
    }   
    for(i=0;i<n;i++){
        sum+=arr[i];
    }    
    average=sum/n;   
    printf("%.2f",average);  
    return 0;
}


5.soru
bu printf de  neden %c yapmadık neden %s yaptık
%s yaptık arr yazdık, böylelikle arr a tanımladıgımız
her şeyi gösterir,bu \0 dedigimiz de terminate anlamı var
okumayı durdur gibi birde ("%s",&arr[1]) yazdın mesela
bize  1 ve sonraki gelenleri gösterir,yani bcd yi 
gösterir,a yı göstermez.şu & gerekli %s yazıyorsak.
,sonra %c desen %s yerine bu arr i degiştirmek gerek mesela,
("%c",arr[2]) yazdık mesela bize 2 numaraya atanmış olan 
sayıyı gösterir yani 'c' yi gösterir sadece arr yazsan 
 yatay ok gösteriyor,saçmalık yani,

#include<stdio.h>
int main(){
    char arr[4] ={'a','b','c','d'};
    printf("our string is %s",arr); 
    return 0;
}


Example #10: Insertion Sort array pdf inde sayfa 27
0
2
3
5658
45
423
65
1
5
4
{0}{1}{2}{3}{4}{5}{45}{65}{423}{5658}
#include <stdio.h>
void insertion_sort(int ar[])
{
    int value, i, j;
     for(i=0;i<10;i++){
scanf("%d",&ar[i]);
    }
for (i=1; i<10; i++)
{
value = ar[i];
j = i-1;
while ((j>=0) && (ar[j]>value))
{
ar[j+1] = ar[j];
j--;
}
ar[j+1] = value;
}
for(i=0;i<10;i++){
    printf("%d",ar[i]);
}
}
int main(){
    int ar[10];
insertion_sort(ar[10]);
return 0;
}


arraylardaki örnek bubbleshort
10
12
53
655
5
3254
45
654
8
5
3
listed in ascending order;
3 5 5 8 12 45 53 654 655 3254

#include<stdio.h>
void read_array(int ar[],int size)
{
    int i;
    for(i=0;i<size;i++)
        scanf("%d",&ar[i]);
}
void printf_array(int ar[],int size){
int i;
for(i=0;i<size;i++){
    printf("%d ",ar[i]);
}
printf("\n");
}
void swap(int *a,int *b)
{
    int temp;
    temp= *a;
    *a= *b;
    *b= temp;
}
void bubblesort(int arr[],int n)
{
    int i,j;
    for(i=0; i< n-1; i++)
        for(j=0;j<n-i-1;j++){
        if(arr[j]>arr[j+1]){
        swap(&arr[j],&arr[j+1]);}
}
}
int main(){
int ar[100],n;
scanf("%d",&n);
read_array(ar,n);
bubblesort(ar,n);
printf("listed in ascending order;\n");
printf_array(ar,n);
return 0;
}


arraylardeki example 8;
inverse olayı
1 2 3 4 5 6 7 8 9 10 yazdın sana
10 9 8 7 6 5 4 3 2 1 verir

#include<stdio.h>
int main(){
int i,n,k;
scanf("%d",&n);
int arr[n];
for(i=0;i<n;i++)
    scanf("%d",&arr[i]);
    for(i=0;i<n/2;i++){
        k=arr[i];
        arr[i]=arr[n-1-i];
        arr[n-1-i]=k;
    }
    for(i=0;i<n;i++){
        printf("%d ",arr[i]);
    }
return 0;
}



lab 10
question 1
#include <stdio.h>
void printArray(int a[], int size);
int main () {
    int i, n[100];
    int numOfElements;
    scanf("%d", &numOfElements);
    n[0]=2;
    for(i=1;i<numOfElements;i++){
        n[i]=n[i-1]*2;
    }
    printArray(n, numOfElements);
    return 0;
}
void printArray(int a[], int size){
    int j;	
    for (j=0; j<size; j++ ) 
        printf("%d ", a[j]);
}



question.2
#include <stdio.h>
#define MAX_LENGTH 100
void printArray(int a[], int size);
void ReverseArray(int array[], int size);
int main () {
    int i, n[MAX_LENGTH];
    int numOfElements;
    scanf("%d",&numOfElements);
    n[0]=2;
    for(i=1;i<numOfElements;i++){
        n[i]=n[i-1]*2;
    }
    ReverseArray(n, numOfElements);
	printArray(n, numOfElements);
    return 0;
}
void printArray(int a[], int size){
    int j;	
    for (j=0; j<size; j++ ) 
        printf("%d ", a[j]);
} 
void ReverseArray(int array[], int size){
    int i;	
    int temp;
	for (i=0; i<size/2; i++) {
        temp=array[i];
        array[i]=array[size-i-1];
        array[size-i-1]=temp;
  }	
}





question 3.
#include <stdio.h>
#define MAX_LENGTH 100
void fillArray(int n[], int size);
int linearSearch(int array[], int key, int size);
int main () {
    int key, numOfElements, main_array[MAX_LENGTH];
    scanf("%d", &key);
    scanf("%d", &numOfElements);
    fillArray(main_array, numOfElements);
    printf("%d",linearSearch(main_array, key, numOfElements));
    return 0;
}
//fill array with 2^i values. The value at index i will be 2^i.
void fillArray(int n[], int size){
    int i;
   n[0]=2;
    for(i=1;i<size;i++){
        n[i]=n[i-1]*2;
    } 
}




question 4.
void fillArray(int arr[],int size){
    int i;
    for(i=0;i<size;i++){
        scanf("%d",&arr[i]);
    }
}
void printArray(int arr[],int size){
    int i;
    for(i=0;i<size;i++){
        printf("%d ",arr[i]);
    }
}
void sortArray(int arr[],int size){
    int i;
    int temp=0;
    int loop=size;
    while(loop--){
         for(i=0;i<size-1;i++){
        if(arr[i]>arr[i+1]){
            temp=arr[i+1];
            arr[i+1]=arr[i];
            arr[i]=temp;
        }
    }
    }
   
}



question5.
#include <stdio.h>
#define SIZE 100
void fillArray(int arr[], int no);
void printArray(int arr[], int no);

int main(){
    int arr[SIZE];
    int no;
    scanf("%d",&no);
    fillArray(arr, no);
    printArray(arr, no);
    return 0;
}
void fillArray(int arr[], int no){
    int i;
    for(i=0;i<no;i++){
        scanf("%d",&arr[i]);
    }
}
void printArray(int arr[], int no){
    int i;
    printf("Elements of even array:\n");
    for(i=0;i<no;i++){
        if(arr[i]%2==0){
            printf("%d ",arr[i]);
        }
    }
    printf("\nElements of odd array:\n");
    for(i=0;i<no;i++){
        if(arr[i]%2!=0){
            printf("%d ",arr[i]);
        }
    }
}







#include <stdio.h>
#include <string.h>
int main(){
int i,n;
char arr[]={'a','b','c','d','l','j','h','g','\0'},arr1[]={"qwertyuo"};
char arr2[100]="abcdlkjh",arr3[50]={"qwertyuo"};
char ar[100]="abcdlkjh",ar1[50]={"qwertyuo"};
char a[100]="abCdlkjh";
//qwer     {'a','b','c','d','\0'}


//strcmp
char stra[] = "abcd", strb[] = "abCd", strc[] = "abcd";
  char  strd[] = "Aabc";
    int results;

    // comparing strings str1 and str2
    results = strncmp(stra, strb,4);
    printf("strcmp(str1, str2) = %d\n", results);

    // comparing strings str1 and str3// ASCLL tablosuna göre alfabetik
    // sýralamada hangisi önce gelirse diyor tanýmda lakin hangisi önce biterse
    results = strncmp(stra, strc,4);
    printf("strcmp(str1, str3) = %d\n", results);
    // comparing strings str4 and str1
    results = strncmp(strd, stra,4);
    printf("strcmp(str1, str4) = %d\n", results);
printf("\n");
printf("\n");


//strncat
strncat(arr2,arr3,6);
    printf("%s",arr2);
printf("\n");
    printf("%s",arr3);
printf("\n");
printf("\n");

 //strncpy
 strncpy(arr1,arr,5);
    printf("%s",arr);
printf("\n");
    printf("%s",arr1);
printf("\n");
printf("\n");


for(i=0;i<8;i++)
    printf("%c",arr[i]);
printf("\n");
for(i=0;i<8;i++)
    printf("%c",arr1[i]);
printf("\n");
printf("\n");

//strlen
n=strlen(arr);
 printf("%d",n);
 printf("\n");
 n=strlen(arr1);
 printf("%d\n",n);
printf("\n");

 //strcpy
 strcpy(arr1,arr);
 for(i=0;i<8;i++)
    printf("%c",arr[i]);
printf("\n");
for(i=0;i<8;i++)
    printf("%c",arr1[i]);
printf("\n");
printf("\n");
//strcat
strcat(arr2,arr3);
    printf("%s",arr2);
printf("\n");
    printf("%s",arr3);
printf("\n");
printf("\n");
//strcmp
char str1[] = "A", str2[] = "a", str3[] = "abcd",str4[] = "Aabc";
    int result;
    // comparing strings str1 and str2
    result = strcmp(str1, str2);
    printf("strcmp(str1, str2) = %d\n", result);
    // comparing strings str1 and str3// ASCLL tablosuna göre alfabetik
    // sýralamada hangisi önce gelirse diyor tanýmda lakin hangisi önce biterse
    result = strcmp(str1, str3);
    printf("strcmp(str1, str3) = %d\n", result);
    // comparing strings str4 and str1
    result = strcmp(str4, str1);
    printf("strcmp(str1, str4) = %d\n", result);
printf("\n");
printf("\n");
return 0;
}





lab11
1.question
#include <stdio.h>
#include <string.h>
int main () {
   char str1[20] = "Hello";
   char str2[20] = "World";
   char str3[40];
   int  len;
   // copy str1 into str3
   strcpy(str3,str1);// str3="Hello"
   printf("The copied str3 is: %s\n", str3);
   
   // concatenate str1 and str2 and assign result to str3
   // note that str3 has already contents of str1
   strcpy(str1,str2); // str1="world"
   strcpy(str3,""); // str3="Hello"
   strcat(str3,str1);
   printf("The concatenated str3 is: %s\n", str3);
   
   // print total length of str3 after concatenation
   len=strlen(str3);
   printf("The length of str3: %d\n", len);
   return 0;
}



2.question.
#include <stdio.h>
#include <string.h> 
int main()
{
   char string[1000], sub[1000];
   int position, length ,i;
   //read the string at first
   fgets(string, sizeof string, stdin); 
   //get the position (M) and length (N) of substring\n");
   scanf("%d %d",&position, &length);   
   //copy chars from string to sub
   for( i=0;i<length;i++){
       sub[i]=string[position+i-1];
   }  
   //set the last character as null terminator
   sub[i]='\0';
   printf("%s\n", sub);
   return 0;
}




3.question
#include <stdio.h>
int main()
{
   char str[1000], ch;
   int i, frequency = 0;  
   //read the string at first
   fgets(str, sizeof(str), stdin);  
   //read a character to find its frequency
   scanf("%c",&ch);  
   //iterate over the string, i.e. read string char by char
   //increment your counter , if you encounter the character given
   for(i=0;i<sizeof(str);i++){
       if(str[i]!='\0'){
           if(str[i]==ch){
                frequency+=1;
            }
       }
       else{
           break;
       }
 
   }   
   //print the frequency of desired character
   printf("Frequency of %c = %d",ch ,frequency);
   return 0;
}





Input	              Result
C                      C    
C++                    C++       
Java                   Java
PHP                    JavaScript                                                     
Python                 PHP                               
Perl                   PHP                                           
Ruby                   Perl                                  
R                      Python                                
JavaScript             R                   
PHP                    Ruby           

lab11 question 4
#include<stdio.h>
#include <string.h>
int main()
{
    int i, j;
    char str[10][50], temp[50];
    
    //read 10 words from the user & store each word in the string array
    for(i=0;i<10;i++){
        fgets(str[i], sizeof str[i], stdin);
    }
    //Bubble sort
    for(i=0; i<9; ++i){
        for(j=i+1; j<10 ; ++j)
        {
            //compare strings
            if(strcmp(str[i],str[j])>0){
            strcpy(temp,str[i]);
            strcpy(str[i],str[j]);
            strcpy(str[j],temp);    
            }
            //replace string at location i with j           
        }
    }
    //print sorted list of words
    for(i=0; i<10; ++i)
    {
         printf("%s",str[i]);
    }
    return 0;
}






/*
input:
4 0 4 7 6

output:
Elements of even array:
0 4 6
Elements of odd array:
7
*/
lab11 5.question
#include <stdio.h>
#define size 100
void read(int func1[],int sayi);
void b(int func3[],int sayi2);

int main(){
    int num,arr1[size];
    scanf("%d",&num);
    read(arr1,num);
    b(arr1,num);
    return 0;
}
void read(int func1[],int sayi){
    int i;
    for(i=0;i<sayi;i++)
    scanf("%d",&func1[i]);
}
void b(int func3[],int sayi2){
    int i;
    printf("Elements of even array:\n");
    for(i=0;i<sayi2;i++)
    if(func3[i]%2==0)
    printf("%d ",func3[i]);
   
    printf("\nElements of odd array:\n");
    for(i=0;i<sayi2;i++)
    if(func3[i]%2!=0)
    printf("%d ",func3[i]);
}





lab12 
1.question:
#include <stdio.h>
int main() {
	int i, j, k, num;
	scanf("%d", &num);	
	int arr[] = {20, 303, 3, 4, 25};
	//int size = sizeof(arr)/sizeof(int);	
	for(i=0;i<5;i++){
	    for(j=i+1;j<5;j++){
	        for(k=j+1;k<5;k++){
	            if(arr[i]+arr[j]+arr[k]==num){
	                printf("%d + %d + %d = %d",arr[i],arr[j],arr[k],num);
	            }
	        }
	    }
	}	
	return 0;
}




lab 12  2.question:
bu benim cözümüm hocanınki bir altta
#include <stdio.h>
int main() {
	int i, arr[99],k;
	for(i=0;i<100;i++){
	    scanf("%d",&arr[i]);
	}
	for(i=1;i<100;i++){
	    for(k=0;k<100;k++){
	        if(i==arr[k]){
	           break;
	        }
	    }
	    if(i==arr[k]){
	      continue;
	    }
	    else{
	        printf("%d",i);
	        break;
	    }
	}
	return 0;
}

lab12 2 question hocanın cözümü
#include <stdio.h>
int main() {
	int i, arr[99];
	int sum=0;
	int expectedSum = 100*101/2;	
	for(i=0; i<99; i++){
	    scanf("%d", &arr[i]);
	}
	
	for(i=0; i<99; i++){
        sum+=arr[i];
	}
	printf("%d", expectedSum-sum);
	return 0;
}




lab13  1question 
#include <stdio.h>
int factorial(unsigned int i) {
if(i>=1){
    return i*factorial(i-1);
}
else{
    return 1;
}
}
int main() {
	int num;
	scanf("%d", &num);
	printf("Factorial of %d is %d\n", num, factorial(num));
	return 0;
}




lab13 2.question
#include <stdio.h>
bubbleshort
int main() {
    int array[100], n, i, j, swap;
    
    //read number of elements from the  user as n
    scanf("%d", &n);
    for(i=0;i<n;i++){
        scanf("%d",&array[i]);
    }
    for (i = 0; i < (n - 1); i++) {
        for(j=0;j<(n-1);j++){
            if (array[j] > array[j + 1]) /* For decreasing order use < */
            {
                //swap elements at location j and j+1
                swap=array[j];
                array[j]=array[j+1];
                array[j+1]=swap;
            }
        }
    }
    
    
    printf("Sorted list in ascending order:\n");
    
    //print elements by putting white spaces between them
    for(i=0;i<n;i++){
        printf("%d ",array[i]);
    }
    return 0;
}



lab13 3.question
insertionsort
#include <stdio.h>
#include <math.h>
/* Function to sort an array using insertion sort*/
void insertionSort(int arr[], int n)
{
    int i, key, j;
    for (i = 1; i < n; i++){
        key = arr[i];
        j = i-1;
        /* Move elements of arr[0..i-1], that are
        greater than key, to one position ahead
        of their current position */
        while (j >= 0 && arr[j] > key)
        {
            arr[j+1] = arr[j];
            j = j-1;
        }
        arr[j+1] = key;
    }
}
// A utility function ot print an array of size n
void printArray(int arr[], int n)
{
    int i;
    for (i=0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");
}
/* Driver program to test insertion sort */
int main()
{
    int i, n, arr[100];
    //read number of elements from the  user as n
scanf("%d",&n);
    
    //read n array elements from the user one by one
    for(i=0;i<n;i++){
        scanf("%d",&arr[i]);
    }
    
    //call insertionSort function for arr and n
    insertionSort(arr,n);
    printf("Sorted list in ascending order:\n");
    
    //print sorted list using printArray function
    printArray(arr,n);
    return 0;
}



lab13  4.question
sequential(linear)seaarch
//bu şekilde dogru veriyor,şu swap yapmayınca okay diyor
#include <stdio.h>
int main(){
int i,arr[10],n,c,m=0;
//int swap,i,j;
scanf("%d",&c);
scanf("%d",&n);
for(i=0;i<c;i++){
    scanf("%d",&arr[i]);
}

/*
for (i=0;i<(n-1);i++){
        for(j=i+1;j<(n);j++){
            if (arr[i]>arr[j]) 
 //           {
                //swap elements at location j and j+1
  //             swap=arr[i];
   //             arr[i]=arr[j];
     //           arr[j]=swap;
  //          }
 //       }
  //  }
*/
for(i=0;i<c;i++){
    if(n==arr[i]){
        m=1;
        break;
    }
}
if(m==1){
    printf("Searched item %d is located at location %d.",n,i);
    }
else{
      printf("Searched item %d cannot be found in the given array",n);
}
    return 0;
}



lab13 5.question
iterative binary search
#include <stdio.h>
// An iterative binary search function. It returns location of searched item x in
// given array arr[l..r] if present, otherwise -1
int binarySearch(int arr[], int l, int r, int x)
{
    while (l <= r)
    {
        int m = l + (r-l)/2;
        // Check if x is present at mid
        if (arr[m] == x)
           return printf("Searched item %d is located at location %d.",x,m);
        
        // If x greater, ignore left half
        if (arr[m] < x)
            l = m + 1;
        // If x is smaller, ignore right half
        else
            r = m - 1;
    }
    // if we reach here, then element was not present
    return printf("Searched item %d cannot be found in the given array ",x); 
}
int main()
{
    int num,searched,i,j,swap,arr[100];
    scanf("%d",&num);
    scanf("%d",&searched);
    for(i=0;i<num;i++){
        scanf("%d",&arr[i]);
    }
    
    for(i=0;i<(num-1);i++){
        for(j=i+1;j<(num);j++){
            if(arr[i]>arr[j]){
            swap=arr[i];
            arr[i]=arr[j];
            arr[j]=swap;
            }
        }
    }
    binarySearch(arr,0,num,searched);
return 0;
}





lab14 1.question
#include <stdio.h>
int main(){
    
    int i,j;
    int arr[3][4] = {  
        {0, 1, 2, 3} ,   /*  initializers for row indexed by 0 */
        {4, 5, 6, 7} ,   /*  initializers for row indexed by 1 */
        {8, 9, 10, 11}   /*  initializers for row indexed by 2 */
    };

    /*print arr, two dimensional array elements as a table like in the following:
    * 0 1 2 3
    * 4 5 6 7
    * 8 9 10 11
    */
    for(i=0;i<3;i++){
       for(j=0;j<4;j++){
           printf("%d ",arr[i][j]);
       }
       printf("\n");
   }
   
    int a[5][2] = { {0,0}, {1,2}, {2,4}, {3,6},{4,8}};
    
    /* print a, array elements with indexes as in the following:
    * a[0][0] = 0
    * a[0][1] = 0
    * a[1][0] = 1
    * ...........
    */
    for(i=0;i<5;i++){
       for(j=0;j<2;j++){
           printf("a[%d][%d] = %d\n", i, j, a[i][j]);
       }
   }
}


lab14 2.question
#include<stdio.h>
int main(){
   /* 2D array declaration*/
   int arr[2][3];
   
   /*Counter variables for the loop*/
   int i,j;
   
   /*read 2*3=6 array elements from the user one by one*/
   for(i=0;i<2;i++){
       for(j=0;j<3;j++){
           scanf("%d",&arr[i][j]);
       }
   }
   
   /*Displaying array elements, row by row*/
   printf("Two Dimensional array elements:\n");
   for(i=0;i<2;i++){
       for(j=0;j<3;j++){
           printf("%d ",arr[i][j]);
       }
       printf("\n");
   }
   return 0;
}


lab14 3.question
input
2 3 2 5 6 12 -23 45
output
2 5 6
12 -23 45
2 12
5 -23
6 45
#include <stdio.h>
int main()
{	
	/*Declare two 2-D arrays with the  size of 10x10*/
	int arr[10][10], temp[10][10];
    
    /*read number of rows and columns*/
    int i,j, row, col;
    scanf("%d %d", &row,&col);
    
    /*read r*c array elements from the user one by one*/
    for(i=0;i<row;i++)
        for(j=0;j<col;j++)
            scanf("%d", &arr[i][j]);
        
    /*Display the r*c matrix */
    for(i=0;i<row;i++){
       for(j=0;j<col;j++){
           printf("%d ",arr[i][j]);
       }
       printf("\n");
   }
    
	/*Calculate the transpose of r*c matrix and fill transpose 2-D array*/
    for(i=0;i<row;i++)
        for(j=0;j<col;j++)
            temp[j][i]=arr[i][j];

    /*Display the transpose of r*c matrix */
    for(i=0;i<col;i++){
       for(j=0;j<row;j++){
           printf("%d ",temp[i][j]);
       }
       printf("\n");
   }

    return 0;
}



lab14. 4 question
matrix carpımı
input
2 3 3 1 2 5 4 6 8 4 6 5 8
output
69
108
#include <stdio.h>
// function to get matrix elements entered by the user
void getMatrixElements(int matrix[][10], int row, int column) {

   for (int i = 0; i < row; ++i) {
      for (int j = 0; j < column; ++j) {
         scanf("%d", &matrix[i][j]);
      }
   }
}

// function to multiply two matrices
void multiplyMatrices(int first[][10],
                      int second[][10],
                      int result[][10],
                      int r1, int c1, int r2, int c2) {

   // Initializing elements of matrix mult to 0.
   for (int i = 0; i < r1; ++i) {
      for (int j = 0; j < c2; ++j) {
         result[i][j] = 0;
      }
   }

   // Multiplying first and second matrices and storing it in result
   for (int i = 0; i < r1; ++i) {
      for (int j = 0; j < c2; ++j) {
         for (int k = 0; k < c1; ++k) {
            result[i][j] += first[i][k] * second[k][j];
         }
      }
   }
}

// function to display the matrix
void display(int result[][10], int row, int column) {

   for (int i = 0; i < row; ++i) {
      for (int j = 0; j < column; ++j) {
         printf("%d ", result[i][j]);
         if (j == column - 1)
            printf("\n");
      }
   }
}

int main() {
   int first[10][10], second[10][10], result[10][10], r1, c1, r2, c2;
   scanf("%d %d", &r1, &c1);
   scanf("%d %d", &r2, &c2);

   // Taking input until
   // 1st matrix columns is not equal to 2nd matrix row
   while (c1 != r2) {
      printf("Error! Enter rows and columns again.\n");
      printf("Enter rows and columns for the first matrix: ");
      scanf("%d%d", &r1, &c1);
      printf("Enter rows and columns for the second matrix: ");
      scanf("%d%d", &r2, &c2);
   }

   // get elements of the first matrix
   getMatrixElements(first, r1, c1);

   // get elements of the second matrix
   getMatrixElements(second, r2, c2);

   // multiply two matrices.
   multiplyMatrices(first, second, result, r1, c1, r2, c2);

   // display the result
   display(result, r1, c2);

   return 0;
}






lab15   1.question

#include <stdio.h>
typedef struct complex
{
    float real; //real float definition
    float imag; //imaginary float definition
} complex;
complex add(complex n1,complex n2);

int main()
{
    complex n1, n2, temp;
    scanf("%f %f", &n1.real, &n1.imag); // read first number
    scanf("%f %f", &n2.real, &n2.imag); // read second number
    temp=add(n1, n2);
    printf("Sum = %.1f + %.1fi", temp.real, temp.imag);

    return 0;
}
complex add(complex n1, complex n2)
{
      complex result;//studentNumber
      result.real=n1.real+n2.real;
      result.imag=n1.imag+n2.imag;
      return result;
}


lab15  2question
#include <stdio.h>
#include <string.h>
typedef struct Student{
	int ID; //Student ID as an integer
	char name[50]; //Char array, i.e. string as the student name
} f;

int main(){
	f student1; //create student1
	f student2; //create student2
	student1.ID=1020; //set student-1's ID as 1020
	student2.ID=1021; //set student-2's ID as 1021
	
	//student.name="sdkfkusdfksd";
	strcpy(student1.name,"Ali"); //set student-1's name as Ali
	strcpy(student2.name,"Veli"); //set student-2's name as Veli
	
	//print information about student-1
	printf("Student-1 name: %s and ID: %d\n",student1.name,student1.ID);
	
	//print information about student-2
	printf("Student-2 name: %s and ID: %d\n",student2.name,student2.ID);
return 0;
}


lab15 3.question
#include <stdio.h>

typedef struct Book{
    int id;
}book;

int main(){
    book book1, book2;
    
    book1.id=1213;
    book2.id=1214;
    
    printf("%d\n",book1.id);
    printf("%d\n",book2.id);
return 0; 
}


lab15  4.question
#include <stdio.h>
#include <string.h>

typedef struct Book{
    char title[50];
}book;

int main(){
    book book1, book2;
    
    strcpy(book1.title,"C Programming");
    strcpy(book2.title,"C++ Programming");
    
    printf("%s\n",book1.title);
    printf("%s\n",book2.title);
    return 0;
}




başka bir struct denemesi
#include <stdio.h>
#include <string.h>
typedef struct def{
    int num;
    int arr[100];
    char name[100];
    char gender[100];
}oden;
oden func(char n2[100],oden n1){
    oden buse;
    int i;
    i=strcmp(n2,"buse");
    if(i==0){
        i=1;
    }
   if(i){
 buse.num=2;
 buse.arr[0]=30;
 strcpy(buse.name,"buse");
 strcpy(buse.gender,"female");
 printf("%d sirada  %s kisisi %s  cinsiyetinde %d yasinda\n",buse.num,buse.name,buse.gender,buse.arr[0]);
   }

 n1.num=1;
 n1.arr[0]=31;
 strcpy(n1.name,"ebru");
 strcpy(n1.gender,"female");
 printf("%d sirada  %s kisisi %s  cinsiyetinde %d yasinda",n1.num,n1.name,n1.gender,n1.arr[0]);
}
int main(){
 oden deneme;
 func("buse",deneme);
    return 0;
}






HSV genişletilmiş versiyonu 
cse midterm fourth question.
#include<stdio.h>
int main(){
   char ch,h,s,v,H=0,S=0,V=0;
   /*scanf("%c",&ch); scanf burda olmuyor abi
   cünkü character alıyorsun ve tek tek isleme
   geciriyor bütün halinde degil,harf harf yani
   do while de  burda hep hsv geldigi için
    başa geri dönüyor
   */
   do{
       scanf("%c",&ch);
        if(ch=='H'){
            ++H;
        }else if(ch=='S'){
            ++S;
        }else if(ch=='V'){
            ++V;
        }//else {break;}
   }while(ch!='\n' && ((ch>=65 && ch<=90) || (ch<123 && ch>96)));
   for(h=0;h<H;h++){
    printf("H");
   }
    for(s=0;s<S;s++){
    printf("S");
   }
    for(v=0;v<V;v++){
    printf("V");
   }
return 0;
}

